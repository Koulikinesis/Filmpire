{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from 'react';\nimport { ColorModeContext } from '../utils/ToggleColoMode';\nimport { fetchToken } from '../utils';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport alanBtn from '@alan-ai/alan-sdk-web';\nimport { searchMovie, selectGenreOrCategory } from '../features/currentGenreOrCategory';\n\nconst useAlan = () => {\n  _s();\n\n  const {\n    setMode\n  } = useContext(ColorModeContext);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    alanBtn({\n      key: '689accad644340045d875f2bc92c95232e956eca572e1d8b807a3e2338fdd0dc/stage',\n      onCommand: _ref => {\n        let {\n          command,\n          mode,\n          genres,\n          genreOrCategory,\n          query\n        } = _ref;\n\n        if (command === 'chooseGenre') {\n          const foundGenre = genres.find(g => g.name.toLowerCase() === genreOrCategory.toLowerCase());\n          console.log(foundGenre);\n\n          if (foundGenre) {\n            navigate('/');\n            dispatch(selectGenreOrCategory(foundGenre.id));\n          }\n        } else if (command === 'changeMode') {\n          if (mode === 'light') {\n            setMode('light');\n          } else {\n            setMode('dark');\n          }\n        } else if (command === 'login') {\n          fetchToken();\n        } else if (command === 'logout') {\n          localStorage.clear();\n          window.location.href = '/';\n        } else if (command === 'search') {\n          dispatch(searchMovie(query));\n        }\n      }\n    });\n  }, []);\n};\n\n_s(useAlan, \"b0DQRsXrNaFDZGh82q8M2WkUwx8=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\nexport default useAlan;","map":{"version":3,"names":["React","useEffect","useContext","ColorModeContext","fetchToken","useDispatch","useNavigate","alanBtn","searchMovie","selectGenreOrCategory","useAlan","setMode","navigate","dispatch","key","onCommand","command","mode","genres","genreOrCategory","query","foundGenre","find","g","name","toLowerCase","console","log","id","localStorage","clear","window","location","href"],"sources":["C:/Users/Oblivion/dummy/Filmpire/src/components/Alan.jsx"],"sourcesContent":["import React, { useEffect, useContext } from 'react';\r\nimport { ColorModeContext } from '../utils/ToggleColoMode';\r\nimport { fetchToken } from '../utils';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport alanBtn from '@alan-ai/alan-sdk-web';\r\nimport { searchMovie, selectGenreOrCategory } from '../features/currentGenreOrCategory';\r\n\r\nconst useAlan = () => {\r\n   const { setMode } = useContext(ColorModeContext);\r\n   const navigate = useNavigate();\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n      alanBtn({\r\n          key: '689accad644340045d875f2bc92c95232e956eca572e1d8b807a3e2338fdd0dc/stage',\r\n          onCommand: ({ command, mode, genres, genreOrCategory , query}) => {\r\n            if (command === 'chooseGenre'){ \r\n               const foundGenre = genres.find((g) => g.name.toLowerCase() === genreOrCategory.toLowerCase());\r\n               console.log(foundGenre)\r\n\r\n               if (foundGenre){\r\n                  navigate('/');\r\n                  dispatch(selectGenreOrCategory(foundGenre.id))\r\n               }\r\n            }\r\n            else if (command === 'changeMode') {\r\n              if (mode === 'light'){\r\n                  setMode('light');\r\n              } else {\r\n                  setMode('dark');\r\n              }\r\n            }\r\n            else if (command === 'login') {\r\n               fetchToken();\r\n            }\r\n            else if (command === 'logout'){\r\n               localStorage.clear();\r\n               window.location.href = '/';\r\n            }\r\n            else if (command === 'search'){\r\n               dispatch(searchMovie(query))\r\n            }\r\n          }\r\n      });\r\n    }, []);\r\n\r\n}\r\n\r\nexport default useAlan;"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,WAAT,EAAsBC,qBAAtB,QAAmD,oCAAnD;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACnB,MAAM;IAAEC;EAAF,IAAcT,UAAU,CAACC,gBAAD,CAA9B;EACA,MAAMS,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAMO,QAAQ,GAAGR,WAAW,EAA5B;EAEAJ,SAAS,CAAC,MAAM;IACbM,OAAO,CAAC;MACJO,GAAG,EAAE,wEADD;MAEJC,SAAS,EAAE,QAAuD;QAAA,IAAtD;UAAEC,OAAF;UAAWC,IAAX;UAAiBC,MAAjB;UAAyBC,eAAzB;UAA2CC;QAA3C,CAAsD;;QAChE,IAAIJ,OAAO,KAAK,aAAhB,EAA8B;UAC3B,MAAMK,UAAU,GAAGH,MAAM,CAACI,IAAP,CAAaC,CAAD,IAAOA,CAAC,CAACC,IAAF,CAAOC,WAAP,OAAyBN,eAAe,CAACM,WAAhB,EAA5C,CAAnB;UACAC,OAAO,CAACC,GAAR,CAAYN,UAAZ;;UAEA,IAAIA,UAAJ,EAAe;YACZT,QAAQ,CAAC,GAAD,CAAR;YACAC,QAAQ,CAACJ,qBAAqB,CAACY,UAAU,CAACO,EAAZ,CAAtB,CAAR;UACF;QACH,CARD,MASK,IAAIZ,OAAO,KAAK,YAAhB,EAA8B;UACjC,IAAIC,IAAI,KAAK,OAAb,EAAqB;YACjBN,OAAO,CAAC,OAAD,CAAP;UACH,CAFD,MAEO;YACHA,OAAO,CAAC,MAAD,CAAP;UACH;QACF,CANI,MAOA,IAAIK,OAAO,KAAK,OAAhB,EAAyB;UAC3BZ,UAAU;QACZ,CAFI,MAGA,IAAIY,OAAO,KAAK,QAAhB,EAAyB;UAC3Ba,YAAY,CAACC,KAAb;UACAC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;QACF,CAHI,MAIA,IAAIjB,OAAO,KAAK,QAAhB,EAAyB;UAC3BH,QAAQ,CAACL,WAAW,CAACY,KAAD,CAAZ,CAAR;QACF;MACF;IA7BG,CAAD,CAAP;EA+BD,CAhCO,EAgCL,EAhCK,CAAT;AAkCF,CAvCD;;GAAMV,O;UAEcJ,W,EACAD,W;;;AAsCpB,eAAeK,OAAf"},"metadata":{},"sourceType":"module"}