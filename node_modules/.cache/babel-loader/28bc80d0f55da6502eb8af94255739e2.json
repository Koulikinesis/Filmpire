{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst tmdbApiKey = process.env.REACT_APP_TMDB_KEY; //https://api.themoviedb.org/3/movie/popular?api_key=<<api_key>>&language=en-US&page=1\n\nexport const tmdbApi = createApi({\n  reducerPath: 'tmdbApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://api.themoviedb.org/3'\n  }),\n  endpoints: builder => ({\n    //Get Genres\n    getGenres: builder.query({\n      query: () => `genre/movie/list?api_key=${tmdbApiKey}`\n    }),\n    //Get Movies by [Type]\n    getMovies: builder.query({\n      query: _ref => {\n        let {\n          genreIdOrCategoryName,\n          page,\n          searchQuery\n        } = _ref;\n\n        //get movies by search\n        if (searchQuery) {\n          return `/search/movie?query=${searchQuery}&page=${page}&api_key=${tmdbApiKey}`;\n        } //get movies by category (name: string)\n\n\n        if (genreIdOrCategoryName && typeof genreIdOrCategoryName === 'string') return `movie/${genreIdOrCategoryName}?page=${page}&api_key=${tmdbApiKey}`; //get movies by genre (genre: number)\n\n        if (genreIdOrCategoryName && typeof genreIdOrCategoryName === 'number') return `discover/movie?with_genres=${genreIdOrCategoryName}&page=${page}&api_key=${tmdbApiKey}`; //get popular movies\n\n        return `movie/popular?page=${page}&api_key=${tmdbApiKey}`;\n      }\n    }),\n    //Get Movie\n    getMovie: builder.query({\n      query: id => `/movie/${id}?append_to_response=videos,credits&api_key=${tmdbApiKey}`\n    }),\n    getList: builder.query({\n      query: _ref2 => {\n        let {\n          listName,\n          accountId,\n          sessionId,\n          page\n        } = _ref2;\n        return `/account/${accountId}/${listName}?api_key=${tmdbApiKey}&session_id=${sessionId}&page=${page}`;\n      }\n    }),\n    //Get user specific lists\n    getRecommendations: builder.query({\n      query: _ref3 => {\n        let {\n          movie_id,\n          list\n        } = _ref3;\n        return `/movie/${movie_id}/${list}?api_key=${tmdbApiKey}`;\n      }\n    }),\n    //Get Actor details\n    getActorsDetails: builder.query({\n      query: _ref4 => {\n        let {\n          actor_id\n        } = _ref4;\n        return `/person/${actor_id}?api_key=${tmdbApiKey}`;\n      }\n    }),\n    getMoviesByActorId: builder.query({\n      query: _ref5 => {\n        let {\n          id,\n          page\n        } = _ref5;\n        return `/discover/movie?with_cast=${id}&page=${page}&api_key=${tmdbApiKey}`;\n      }\n    })\n  })\n});\nexport const {\n  useGetMoviesQuery,\n  useGetGenresQuery,\n  useGetMovieQuery,\n  useGetListQuery,\n  useGetRecommendationsQuery,\n  useGetActorsDetailsQuery,\n  useGetMoviesByActorIdQuery\n} = tmdbApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","tmdbApiKey","process","env","REACT_APP_TMDB_KEY","tmdbApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getGenres","query","getMovies","genreIdOrCategoryName","page","searchQuery","getMovie","id","getList","listName","accountId","sessionId","getRecommendations","movie_id","list","getActorsDetails","actor_id","getMoviesByActorId","useGetMoviesQuery","useGetGenresQuery","useGetMovieQuery","useGetListQuery","useGetRecommendationsQuery","useGetActorsDetailsQuery","useGetMoviesByActorIdQuery"],"sources":["C:/Users/Oblivion/dummy/Filmpire/src/services/TMDB.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst tmdbApiKey = process.env.REACT_APP_TMDB_KEY;\r\n//https://api.themoviedb.org/3/movie/popular?api_key=<<api_key>>&language=en-US&page=1\r\n\r\nexport const tmdbApi = createApi({\r\n   reducerPath: 'tmdbApi',\r\n   baseQuery: fetchBaseQuery({ baseUrl: 'https://api.themoviedb.org/3' }),\r\n   endpoints: (builder) => ({\r\n      //Get Genres\r\n      getGenres: builder.query({\r\n         query: () => `genre/movie/list?api_key=${tmdbApiKey}`\r\n      }),\r\n      //Get Movies by [Type]\r\n      getMovies: builder.query({\r\n         query: ({ genreIdOrCategoryName, page, searchQuery }) => {\r\n            //get movies by search\r\n            if (searchQuery) {\r\n               return `/search/movie?query=${searchQuery}&page=${page}&api_key=${tmdbApiKey}`;\r\n            }\r\n\r\n            //get movies by category (name: string)\r\n            if (genreIdOrCategoryName && typeof genreIdOrCategoryName === 'string')\r\n               return `movie/${genreIdOrCategoryName}?page=${page}&api_key=${tmdbApiKey}`;\r\n\r\n            //get movies by genre (genre: number)\r\n            if (genreIdOrCategoryName && typeof genreIdOrCategoryName === 'number')\r\n               return `discover/movie?with_genres=${genreIdOrCategoryName}&page=${page}&api_key=${tmdbApiKey}`;\r\n            \r\n\r\n            //get popular movies\r\n            return `movie/popular?page=${page}&api_key=${tmdbApiKey}`;\r\n         },\r\n      }),\r\n\r\n      //Get Movie\r\n      getMovie: builder.query({\r\n         query: (id) => `/movie/${id}?append_to_response=videos,credits&api_key=${tmdbApiKey}`,\r\n      }),\r\n\r\n      getList: builder.query({\r\n         query: ({ listName, accountId, sessionId, page }) =>`/account/${accountId}/${listName}?api_key=${tmdbApiKey}&session_id=${sessionId}&page=${page}`\r\n      }),\r\n\r\n      //Get user specific lists\r\n      getRecommendations: builder.query({\r\n         query: ({movie_id, list})  => `/movie/${movie_id}/${list}?api_key=${tmdbApiKey}`,\r\n      }),\r\n\r\n      //Get Actor details\r\n      getActorsDetails: builder.query({\r\n         query: ({actor_id}) => `/person/${actor_id}?api_key=${tmdbApiKey}`,\r\n      }),\r\n\r\n      getMoviesByActorId: builder.query({\r\n         query: ({ id, page }) =>`/discover/movie?with_cast=${id}&page=${page}&api_key=${tmdbApiKey}`\r\n      })\r\n   }),\r\n})\r\n\r\nexport const {\r\n   useGetMoviesQuery,\r\n   useGetGenresQuery,\r\n   useGetMovieQuery,\r\n   useGetListQuery,\r\n   useGetRecommendationsQuery,\r\n   useGetActorsDetailsQuery,\r\n   useGetMoviesByActorIdQuery,\r\n} = tmdbApi;"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA/B,C,CACA;;AAEA,OAAO,MAAMC,OAAO,GAAGN,SAAS,CAAC;EAC9BO,WAAW,EAAE,SADiB;EAE9BC,SAAS,EAAEP,cAAc,CAAC;IAAEQ,OAAO,EAAE;EAAX,CAAD,CAFK;EAG9BC,SAAS,EAAGC,OAAD,KAAc;IACtB;IACAC,SAAS,EAAED,OAAO,CAACE,KAAR,CAAc;MACtBA,KAAK,EAAE,MAAO,4BAA2BX,UAAW;IAD9B,CAAd,CAFW;IAKtB;IACAY,SAAS,EAAEH,OAAO,CAACE,KAAR,CAAc;MACtBA,KAAK,EAAE,QAAkD;QAAA,IAAjD;UAAEE,qBAAF;UAAyBC,IAAzB;UAA+BC;QAA/B,CAAiD;;QACtD;QACA,IAAIA,WAAJ,EAAiB;UACd,OAAQ,uBAAsBA,WAAY,SAAQD,IAAK,YAAWd,UAAW,EAA7E;QACF,CAJqD,CAMtD;;;QACA,IAAIa,qBAAqB,IAAI,OAAOA,qBAAP,KAAiC,QAA9D,EACG,OAAQ,SAAQA,qBAAsB,SAAQC,IAAK,YAAWd,UAAW,EAAzE,CARmD,CAUtD;;QACA,IAAIa,qBAAqB,IAAI,OAAOA,qBAAP,KAAiC,QAA9D,EACG,OAAQ,8BAA6BA,qBAAsB,SAAQC,IAAK,YAAWd,UAAW,EAA9F,CAZmD,CAetD;;QACA,OAAQ,sBAAqBc,IAAK,YAAWd,UAAW,EAAxD;MACF;IAlBqB,CAAd,CANW;IA2BtB;IACAgB,QAAQ,EAAEP,OAAO,CAACE,KAAR,CAAc;MACrBA,KAAK,EAAGM,EAAD,IAAS,UAASA,EAAG,8CAA6CjB,UAAW;IAD/D,CAAd,CA5BY;IAgCtBkB,OAAO,EAAET,OAAO,CAACE,KAAR,CAAc;MACpBA,KAAK,EAAE;QAAA,IAAC;UAAEQ,QAAF;UAAYC,SAAZ;UAAuBC,SAAvB;UAAkCP;QAAlC,CAAD;QAAA,OAA8C,YAAWM,SAAU,IAAGD,QAAS,YAAWnB,UAAW,eAAcqB,SAAU,SAAQP,IAAK,EAA1I;MAAA;IADa,CAAd,CAhCa;IAoCtB;IACAQ,kBAAkB,EAAEb,OAAO,CAACE,KAAR,CAAc;MAC/BA,KAAK,EAAE;QAAA,IAAC;UAACY,QAAD;UAAWC;QAAX,CAAD;QAAA,OAAwB,UAASD,QAAS,IAAGC,IAAK,YAAWxB,UAAW,EAAxE;MAAA;IADwB,CAAd,CArCE;IAyCtB;IACAyB,gBAAgB,EAAEhB,OAAO,CAACE,KAAR,CAAc;MAC7BA,KAAK,EAAE;QAAA,IAAC;UAACe;QAAD,CAAD;QAAA,OAAiB,WAAUA,QAAS,YAAW1B,UAAW,EAA1D;MAAA;IADsB,CAAd,CA1CI;IA8CtB2B,kBAAkB,EAAElB,OAAO,CAACE,KAAR,CAAc;MAC/BA,KAAK,EAAE;QAAA,IAAC;UAAEM,EAAF;UAAMH;QAAN,CAAD;QAAA,OAAkB,6BAA4BG,EAAG,SAAQH,IAAK,YAAWd,UAAW,EAApF;MAAA;IADwB,CAAd;EA9CE,CAAd;AAHmB,CAAD,CAAzB;AAuDP,OAAO,MAAM;EACV4B,iBADU;EAEVC,iBAFU;EAGVC,gBAHU;EAIVC,eAJU;EAKVC,0BALU;EAMVC,wBANU;EAOVC;AAPU,IAQT9B,OARG"},"metadata":{},"sourceType":"module"}