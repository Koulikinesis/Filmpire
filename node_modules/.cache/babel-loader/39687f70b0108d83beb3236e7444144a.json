{"ast":null,"code":"import axios from \"axios\";\nexport const moviesApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: process.env.REACT_APP_TMDB_KEY\n  }\n});\nexport const fetchToken = async () => {\n  try {\n    const {\n      data\n    } = await moviesApi.get('/authentication/token/new');\n    const token = data.request_token;\n\n    if (data.success) {\n      localStorage.setItem('request_token', token);\n      window.location.href = `https://www.themoviedb.org/authenticate/${token}?redirect_to=${window.location.origin}/approved`;\n    }\n  } catch (error) {\n    console.log('Sorry, your token could not be created.');\n  }\n};\nexport const createSessionId = async () => {\n  const token = localStorage.getItem('request_token');\n\n  if (token) {\n    try {\n      const {\n        data: {\n          session_id\n        }\n      } = await moviesApi.post('authentication/session/new', {\n        request_token: token\n      });\n      localStorage.setItem('session_id', session_id);\n      return session_id;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};","map":{"version":3,"names":["axios","moviesApi","create","baseURL","params","api_key","process","env","REACT_APP_TMDB_KEY","fetchToken","data","get","token","request_token","success","localStorage","setItem","window","location","href","origin","error","console","log","createSessionId","getItem","session_id","post"],"sources":["C:/Users/Oblivion/dummy/Filmpire/src/utils/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const moviesApi  = axios.create({\r\n   baseURL: 'https://api.themoviedb.org/3',\r\n   params: {\r\n      api_key: process.env.REACT_APP_TMDB_KEY,\r\n   },\r\n})\r\n\r\nexport const fetchToken = async () => {\r\n   try{\r\n      const { data } = await moviesApi.get('/authentication/token/new');\r\n      const token = data.request_token;\r\n\r\n      if (data.success){\r\n         localStorage.setItem('request_token',token);\r\n         window.location.href = `https://www.themoviedb.org/authenticate/${token}?redirect_to=${window.location.origin}/approved`;\r\n      }\r\n   } catch (error){\r\n      console.log('Sorry, your token could not be created.')\r\n   }\r\n}\r\n\r\nexport const createSessionId = async () => {\r\n   const token = localStorage.getItem('request_token');\r\n\r\n   if (token){\r\n      try{\r\n         const { data: { session_id }} =  await moviesApi.post('authentication/session/new',{\r\n            request_token: token,\r\n         });\r\n         \r\n         localStorage.setItem('session_id',session_id);\r\n\r\n         return session_id;\r\n      } catch (error){ \r\n         console.log(error);\r\n      }\r\n   }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAID,KAAK,CAACE,MAAN,CAAa;EACpCC,OAAO,EAAE,8BAD2B;EAEpCC,MAAM,EAAE;IACLC,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;EADhB;AAF4B,CAAb,CAAnB;AAOP,OAAO,MAAMC,UAAU,GAAG,YAAY;EACnC,IAAG;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMT,SAAS,CAACU,GAAV,CAAc,2BAAd,CAAvB;IACA,MAAMC,KAAK,GAAGF,IAAI,CAACG,aAAnB;;IAEA,IAAIH,IAAI,CAACI,OAAT,EAAiB;MACdC,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAqCJ,KAArC;MACAK,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,2CAA0CP,KAAM,gBAAeK,MAAM,CAACC,QAAP,CAAgBE,MAAO,WAA9G;IACF;EACH,CARD,CAQE,OAAOC,KAAP,EAAa;IACZC,OAAO,CAACC,GAAR,CAAY,yCAAZ;EACF;AACH,CAZM;AAcP,OAAO,MAAMC,eAAe,GAAG,YAAY;EACxC,MAAMZ,KAAK,GAAGG,YAAY,CAACU,OAAb,CAAqB,eAArB,CAAd;;EAEA,IAAIb,KAAJ,EAAU;IACP,IAAG;MACA,MAAM;QAAEF,IAAI,EAAE;UAAEgB;QAAF;MAAR,IAA2B,MAAMzB,SAAS,CAAC0B,IAAV,CAAe,4BAAf,EAA4C;QAChFd,aAAa,EAAED;MADiE,CAA5C,CAAvC;MAIAG,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAkCU,UAAlC;MAEA,OAAOA,UAAP;IACF,CARD,CAQE,OAAOL,KAAP,EAAa;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACF;EACH;AACH,CAhBM"},"metadata":{},"sourceType":"module"}