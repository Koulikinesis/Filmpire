{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oblivion\\\\dummy\\\\Filmpire\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Divider, List, ListItem, ListItemText, ListSubheader, ListItemIcon, Box, CircularProgress } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { useTheme } from '@mui/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useGetGenresQuery } from '../../services/TMDB';\nimport useStyles from './styles';\nimport genreIcons from '../../assets/genres';\nimport { selectGenreOrCategory } from '../../features/currentGenreOrCategory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst categories = [{\n  label: 'Popular',\n  value: 'popular'\n}, {\n  label: 'Top Rated',\n  value: 'top_rated'\n}, {\n  label: 'Upcoming',\n  value: 'upcoming'\n}];\nconst redLogo = 'https://fontmeme.com/permalink/210930/8531c658a743debe1e1aa1a2fc82006e.png';\nconst blueLogo = 'https://fontmeme.com/permalink/210930/6854ae5c7f76597cf8680e48a2c8a50a.png';\n\nconst Sidebar = _ref => {\n  _s();\n\n  let {\n    setMobileOpen\n  } = _ref;\n  const {\n    genreIdOrCategoryName\n  } = useSelector(state => state.currentGenreOrCategory);\n  const theme = useTheme();\n  const classes = useStyles();\n  const {\n    data,\n    isFetching\n  } = useGetGenresQuery({\n    genreIdOrCategoryName\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setMobileOpen(false);\n  }, [genreIdOrCategoryName]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: classes.imageLink,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.image,\n        src: theme.palette.mode === 'light' ? redLogo : blueLogo,\n        alt: \"Filmpire Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }, this), categories.map(_ref2 => {\n        let {\n          label,\n          value\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Link, {\n          className: classes.links,\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            onClick: () => dispatch(selectGenreOrCategory(value)),\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: genreIcons[label.toLowerCase()],\n                className: classes.genreImage,\n                height: 30\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 16\n          }, this)\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n        children: \"Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }, this), isFetching ? /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: \"4rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this) : data.genres.map(_ref3 => {\n        let {\n          name,\n          id\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(Link, {\n          className: classes.links,\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            onClick: () => dispatch(selectGenreOrCategory(id)),\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: genreIcons[name.toLowerCase()],\n                className: classes.genreImage,\n                height: 30\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 16\n          }, this)\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Sidebar, \"TrEQYALWw//AZF9pxs4ona8raRM=\", false, function () {\n  return [useSelector, useTheme, useStyles, useGetGenresQuery, useDispatch];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useEffect","Divider","List","ListItem","ListItemText","ListSubheader","ListItemIcon","Box","CircularProgress","Link","useTheme","useDispatch","useSelector","useGetGenresQuery","useStyles","genreIcons","selectGenreOrCategory","categories","label","value","redLogo","blueLogo","Sidebar","setMobileOpen","genreIdOrCategoryName","state","currentGenreOrCategory","theme","classes","data","isFetching","dispatch","imageLink","image","palette","mode","map","links","toLowerCase","genreImage","genres","name","id"],"sources":["C:/Users/Oblivion/dummy/Filmpire/src/components/Sidebar/Sidebar.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Divider, List, ListItem, ListItemText, ListSubheader, ListItemIcon, Box, CircularProgress} from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTheme } from '@mui/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useGetGenresQuery } from '../../services/TMDB';\r\nimport useStyles from './styles';\r\nimport genreIcons from '../../assets/genres';\r\nimport { selectGenreOrCategory } from '../../features/currentGenreOrCategory';\r\n\r\nconst categories = [\r\n   { label: 'Popular', value: 'popular' },\r\n   { label: 'Top Rated', value: 'top_rated' },\r\n   { label: 'Upcoming', value: 'upcoming' },\r\n];\r\n\r\nconst redLogo = 'https://fontmeme.com/permalink/210930/8531c658a743debe1e1aa1a2fc82006e.png';\r\nconst blueLogo = 'https://fontmeme.com/permalink/210930/6854ae5c7f76597cf8680e48a2c8a50a.png';\r\n\r\nconst Sidebar = ({ setMobileOpen }) => {\r\n   const { genreIdOrCategoryName } = useSelector((state)=>state.currentGenreOrCategory)\r\n   const theme = useTheme();\r\n   const classes = useStyles();\r\n   const { data, isFetching } = useGetGenresQuery({ genreIdOrCategoryName });\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect(()=>{\r\n      setMobileOpen(false);\r\n   },[genreIdOrCategoryName])\r\n\r\n   return (\r\n    <>\r\n      <Link to='/' className={classes.imageLink}>\r\n         <img\r\n            className={classes.image}\r\n            src={theme.palette.mode === 'light' ? redLogo : blueLogo}\r\n            alt='Filmpire Logo'\r\n         />\r\n      </Link>\r\n      <Divider/>\r\n      <List>\r\n         <ListSubheader>Categories</ListSubheader>\r\n         { categories.map(({label, value})=>(\r\n            <Link key={value} className={classes.links} to='/'>\r\n               <ListItem onClick={()=>dispatch(selectGenreOrCategory(value))} button>\r\n                  <ListItemIcon>\r\n                     <img src={genreIcons[label.toLowerCase()]}className={classes.genreImage} height={30} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={label} ></ListItemText>\r\n               </ListItem>\r\n            </Link>\r\n         ))}\r\n      </List>\r\n      <Divider></Divider>\r\n      <List>\r\n         <ListSubheader>Genres</ListSubheader>\r\n         {isFetching ? (\r\n            <Box display='flex' justifyContent='center'>\r\n               <CircularProgress size='4rem' />\r\n            </Box>\r\n         ) : data.genres.map(({ name, id })=>(\r\n            <Link key={name} className={classes.links} to='/'>\r\n               <ListItem onClick={()=>dispatch(selectGenreOrCategory(id))} button>\r\n                  <ListItemIcon>\r\n                     <img src={genreIcons[name.toLowerCase()]}className={classes.genreImage} height={30} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={name} ></ListItemText>\r\n               </ListItem>\r\n            </Link>\r\n         ))}\r\n      </List>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sidebar"],"mappings":"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"},"metadata":{},"sourceType":"module"}